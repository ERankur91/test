<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LetsGoMo" name="Default test" tests="16" failures="0" timestamp="17 Apr 2015 07:00:32 GMT" time="0.196" errors="0">
  <testcase name="@BeforeClass launch_app" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;port&amp;apos; is required by @Configuration on method launch_app but has not been marked @Optional or defined
in C:\Users\Ankur\AppData\Local\Temp\testng-eclipse-2122032152\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'port' is required by @Configuration on method launch_app but has not been marked @Optional or defined
in C:\Users\Ankur\AppData\Local\Temp\testng-eclipse-2122032152\testng-customsuite.xml
	at org.testng.internal.Parameters.createParameters(Parameters.java:155)
	at org.testng.internal.Parameters.createParameters(Parameters.java:358)
	at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:86)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:199)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </failure>
  </testcase> <!-- @BeforeClass launch_app -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;port&amp;apos; is required by @Configuration on method tearDown but has not been marked @Optional or defined
in C:\Users\Ankur\AppData\Local\Temp\testng-eclipse-2122032152\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'port' is required by @Configuration on method tearDown but has not been marked @Optional or defined
in C:\Users\Ankur\AppData\Local\Temp\testng-eclipse-2122032152\testng-customsuite.xml
	at org.testng.internal.Parameters.createParameters(Parameters.java:155)
	at org.testng.internal.Parameters.createParameters(Parameters.java:358)
	at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:86)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:199)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:225)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:114)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </failure>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="rough" time="0.012" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- rough -->
  <testcase name="TC_01" time="0.005" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_01 -->
  <testcase name="TC_02" time="0.002" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_02 -->
  <testcase name="TC_03" time="0.002" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_03 -->
  <testcase name="TC_04" time="0.001" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_04 -->
  <testcase name="TC_05" time="0.004" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_05 -->
  <testcase name="TC_06" time="0.001" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_06 -->
  <testcase name="TC_07" time="0.001" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_07 -->
  <testcase name="TC_08" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_08 -->
  <testcase name="TC_09" time="0.002" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_09 -->
  <testcase name="TC_10" time="0.002" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_10 -->
  <testcase name="TC_11" time="0.002" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_11 -->
  <testcase name="TC_12" time="0.001" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_12 -->
  <testcase name="TC_13" time="0.001" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_13 -->
  <testcase name="TC_14" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_14 -->
  <testcase name="TC_15" time="0.0" classname="com.test.android.testCases.Reset_AdvID">
    <skipped/>
  </testcase> <!-- TC_15 -->
</testsuite> <!-- Default test -->
